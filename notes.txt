javascript -> nodejs -> v8 / libuv

# v8 - engine to run js outside of browser ( by google ) ( translates js for C++ )
# libuv - c++ project to give the node js excess to operative system, file system, network, concurrency

# Connect js and C++ => process.binding()

# When use ex node crypto module - it uses / references to C++ crypto function

# Process - instance of a program running on pc
# within single process we can have multiply things called Threads ( instructions for the cpu one by one)
# scheduling - which process to process in one time

# one tick - one iteration of while loop

# Node is singlethreated ??, but a lot of functions we write are executed outside of our thread 
# Node event loop is singlethreated
# Expensive operation C++ side and libuv executes outside the event loop, and use thread pool
# Thread pool is the series of 4 threads that can be used for running intensive tasks (expensive calculations - 'fs' module functions; some crypto stuff)


# Async operations - requests.. are reflected pendingOSTasks array 

# Threadpool ( has 4 threads avalible )
FS Module

# OS
HTTPS

# Nodemon not good works with clustering

# Cluster
init index app -> init master -> fork master thread ( init index app *again* but in child mode )


# Apache request banxhmark (MacOS, Linux)
ab -c 50 -n 500 localhost:3000/fast  # (make 5000 requests with 50 req concarency)